@startuml
'https://plantuml.com/class-diagram

class Date {
- year : int
- month : int
- day : int

+ Date(year : int, month : int, day : int)

+ ToString() : string
}

enum TypeOperation {
DEBIT,
CREDIT
}

TypeOperation <--* Category
class Category {
- name : string
- type : TypeOperation
- isDelete : bool

+ Category(name : string, type : TypeOperation)

+ GetName() : string
+ GetType() : TypeOperation
+ IsDelete() : bool

+ Delete() : void
}

Category <--o CategoryDirectory
class CategoryDirectory {
- categories : Category[]

+ CategoryDirectory()

+ AddCategory(name : string, type : TypeOperation) : bool
+ DelCategory(name : string) : bool

+ Find(name : string) : Category
+ GetAll() : Category[]
}

Date <--* Operation
TypeOperation <--* Operation
Category <--* Operation
class Operation {
- type : TypeOperation
- date : Date
- sum : double
- category : Category
- isDelete : bool

+ Operation(type : TypeOperation, date : Date, sum : double, category : Category)

+ GetDate() : Date
+ GetSum() : double
+ GetType() : TypeOperation
+ GetCategory() : Category
+ IsDelete() : bool

+ Delete() : void
}

Operation <--o Wallet
class Wallet {
- name : string
- balance : double
- isDelete : bool

- listOfDebit : Operation[]
- listOfCredit : Operation[]

+ Wallet(name : string, balance : double)

+ Income(type : TypeOperation, date : Date, sum : double, category : Category) : bool
+ Expense(type : TypeOperation, date : Date, sum : double, category : Category) : bool

+ Delete() : void
+ IsDelete() : bool
}

Wallet <--o User
class User {
- name : string
- wallets : Wallet[]
- isDelete : bool

+ User(name : string)

+ AddWallet(name : string, balance : double) : bool
+ DelWallet(name : string) : bool

+ Find(name : string) : Wallet
+ GetAll() : Wallet[]

+ Delete() : void
+ IsDelete() : bool
}

@enduml